Git commands:

*************************************************
clear
*************************************************
poèisti ekran
clear

*************************************************
git config
*************************************************
Nastavitev imena uporabnika
--global na globalni ravni
git config --global user.name "Mitja Petan"

Nastavitev emaila uporabnika
git config --global user.email "mitja.petan@gmail.com"

Nastavite default editorja za pisanje komentarjev (vim defalut editor)
git config --global user.editor "vim"

Pokaži vse spremembe v configu
git config --list

Naredi alias za commit namesto zdaj da pišeš commit lahko napišeš samo co
git config --global alias.co commit

*************************************************
git help
*************************************************
Pokaži pomoè
git help

Pokaži pomoè o add
git help add

*************************************************
git init
*************************************************
inicializiraj novi repozitorij
git init

*************************************************
git add
*************************************************
Dodajanje fajla v staging
git add git_commands.txt

Dodajanje vseh *.java fajlov
git add *.java

Dodajnje v staging vse fajle, ki so bili spremenjeni -A
git add -A

*************************************************
git commit
*************************************************
shranjevanje sprememb
git commit -m 'Random comment'

popravi komentar zadnjega commit-a
git commit --amend

*************************************************
git status
*************************************************
Kakšen je status fajlov
git status

*************************************************
git reset
*************************************************
odstrani fajl iz staging-a
git reset HEAD git_commands.txt

*************************************************
git log
*************************************************

Pokaže vse spremembe v eni vrstici
git log --pretty=oneline

Moj zdefiniran pregled loga 
%h skrajšana oblika hash taga
%an oseba ki je naredila spremembo
%ar datum spremembe
%s prva sprememba
git log --pretty=format:"%h : %an : %ar : %s"

Pokaži zadnja dva commita
git log -p -2

Pokaže skrajšano statistiko
git log --stat

Spremembe v zadnjem tednu
git log --since=1.weeks

Sprememebe na doloèen datum
git log --since="2015-10-01"

Spremembe ki sem jih naredil jaz
git log --author="Mitja Petan"

Spremembe pred doloèenim datumom
git log --before="2015-11-01"

*************************************************
git remote
*************************************************
Povezovanje lokalnega repozitorija z serverjem na github
git remote add origin https://github.com/mitja-petan/Playground.git

Èe bi želel spremeniti ime origin v kaj drugega
git remote rename origin playground

*************************************************
git push
*************************************************
uplodaj spremembe na server
git push origin master

Èe želimo uploadat tag
git push origin 0.0.3

Èe želimo dati na server vse tage
git push origin --tags

Èe želimo izbrisati branch na serverju
git push origin :develop

*************************************************
git fetch
*************************************************
iz serverja potegni podatke vendar ne naredi marge
git fetch

*************************************************
git pull
*************************************************
iz serverja potegni vse podatke in naredi marge
git pull https://github.com/mitja-petan/Playground.git

*************************************************
git revert
*************************************************
pojdi na prejšno verzijo fajla napišeš hash tag za commit, ki bi ga rad dobil nazaj
git revert fr34gfg4

*************************************************
git tag
*************************************************
git tag -a v0.2 -m 'Version 0.2'

*************************************************
git show
*************************************************
Pokaži spremembe, ki jih prinese tag
git show v0.2

*************************************************
git clone
*************************************************
Kopiranje repozitorija na lokalni disk potem ko si naredil fork
git clone https://github.com/mitja-petan/2048.git

*************************************************
git branch
*************************************************
Za kreiranje nove veje kode
git branch imeveje ali git checkout -b imeveje

Seznam vej
git branch

Seznam vseh vej, ki so bile združene merged
git branch --merged

Seznam vseh vej, ki niso združene
git branch --no-marged

Seznam vsek vej in njihov zadnji komit
git branch -v

Brisanje branchov, ki so bili zmrðani
git branch -d imebrancha

Brisanje branchov, ki niso bili zmrðani
git branch -D imebrancha

Brisanje brancha iz serverja
git push origin :develop

Preimenovanje brancha na katerem si trenutno
git branch -m novoimebrancha

*************************************************
git checkout
*************************************************
Preklop med vejami
git checkout imeveje

Za kreiranje nove veje in preklop na njo
git checkout -b imeveje

Èe želimo prenesti nek branch iz serverja
-b pomeni naredi novi branch
develop branch poimenuj kot develop
origin/develop pa pomeni vzemi iz serverja origin branch develop

git checkout -b develop origin/develop

*************************************************
git rebase
*************************************************
Èe želimo v našem trenutnem branchu dobiti že zmrðane sprememeb ki si zdaj v masterju v naš branè
git rebase master

*************************************************
git revert
*************************************************
premakneš se nazaj na prejšni commit vendar trenutni komit postane prejšnji in je še vedno dostopen
git revert HEAD

*************************************************
git reset (bad practice)
*************************************************
èe želiš izbrisati commit, ki si ga naredil

prideš na prejšno verzijo fajla
git reset filename 

Celoten staging area resetiraš na prejšno verzijo (working direktorij se ne spremeni)
git reset

Èe želiš nazaj na doloèen komit (working direktorij se ne spremeni)
git reset commit

Celoten staging area resetiraš na prejšno verzijo in working direktorij
git reset --hard

Èe želiš nazaj na doloèen komit in spremeniti trenutno delo
git reset --hard commit

*************************************************
git clean
*************************************************
dobi seznam fajlov ki niso v git repozitoriju
git clean -n

odstrani fajle, ki niso v gitu (se ne trackajo)
git clean -f

odstrani fajle in direktorije
git clean -df

*************************************************
ssh-keygen
*************************************************
generiranje kljuèa, zato da poveš da je zaupanja vreden raèunalnik in ne rabiš ob vsakem pushu vpisovati gesla

ssh-keygen -t rsa -C "mitja.petan@gmail.com"
Napiši ime kljuèa .. mitjapetan


Zaženi agenta
eval $(ssh-agent)

dodaj kljuè
ssh-add mitjapetan.pub

*************************************************
Vim Editor
*************************************************
Najprej pritisni ESC
Za pisanje komentarja pritisni tipko i
Ko konèaš pritisni :
Za shranjevanje wq in enter

